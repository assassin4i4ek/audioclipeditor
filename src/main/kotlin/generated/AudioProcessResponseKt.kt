//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: audio_process_pipeline.proto

@kotlin.jvm.JvmSynthetic
inline fun audioProcessResponse(block: AudioProcessResponseKt.Dsl.() -> Unit): AudioProcessPipeline.AudioProcessResponse =
  AudioProcessResponseKt.Dsl._create(AudioProcessPipeline.AudioProcessResponse.newBuilder()).apply { block() }._build()
object AudioProcessResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: AudioProcessPipeline.AudioProcessResponse.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: AudioProcessPipeline.AudioProcessResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): AudioProcessPipeline.AudioProcessResponse = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class FragmentsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .Fragment fragments = 1;</code>
     */
     val fragments: com.google.protobuf.kotlin.DslList<AudioProcessPipeline.Fragment, FragmentsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getFragmentsList()
      )
    /**
     * <code>repeated .Fragment fragments = 1;</code>
     * @param value The fragments to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addFragments")
    fun com.google.protobuf.kotlin.DslList<AudioProcessPipeline.Fragment, FragmentsProxy>.add(value: AudioProcessPipeline.Fragment) {
      _builder.addFragments(value)
    }/**
     * <code>repeated .Fragment fragments = 1;</code>
     * @param value The fragments to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignFragments")
    inline operator fun com.google.protobuf.kotlin.DslList<AudioProcessPipeline.Fragment, FragmentsProxy>.plusAssign(value: AudioProcessPipeline.Fragment) {
      add(value)
    }/**
     * <code>repeated .Fragment fragments = 1;</code>
     * @param values The fragments to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllFragments")
    fun com.google.protobuf.kotlin.DslList<AudioProcessPipeline.Fragment, FragmentsProxy>.addAll(values: kotlin.collections.Iterable<AudioProcessPipeline.Fragment>) {
      _builder.addAllFragments(values)
    }/**
     * <code>repeated .Fragment fragments = 1;</code>
     * @param values The fragments to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllFragments")
    inline operator fun com.google.protobuf.kotlin.DslList<AudioProcessPipeline.Fragment, FragmentsProxy>.plusAssign(values: kotlin.collections.Iterable<AudioProcessPipeline.Fragment>) {
      addAll(values)
    }/**
     * <code>repeated .Fragment fragments = 1;</code>
     * @param index The index to set the value at.
     * @param value The fragments to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setFragments")
    operator fun com.google.protobuf.kotlin.DslList<AudioProcessPipeline.Fragment, FragmentsProxy>.set(index: kotlin.Int, value: AudioProcessPipeline.Fragment) {
      _builder.setFragments(index, value)
    }/**
     * <code>repeated .Fragment fragments = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearFragments")
    fun com.google.protobuf.kotlin.DslList<AudioProcessPipeline.Fragment, FragmentsProxy>.clear() {
      _builder.clearFragments()
    }}
}
@kotlin.jvm.JvmSynthetic
inline fun AudioProcessPipeline.AudioProcessResponse.copy(block: AudioProcessResponseKt.Dsl.() -> Unit): AudioProcessPipeline.AudioProcessResponse =
  AudioProcessResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()
