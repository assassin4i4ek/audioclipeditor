//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: audio_process_pipeline.proto

@kotlin.jvm.JvmSynthetic
inline fun fragment(block: FragmentKt.Dsl.() -> Unit): AudioProcessPipeline.Fragment =
  FragmentKt.Dsl._create(AudioProcessPipeline.Fragment.newBuilder()).apply { block() }._build()
object FragmentKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: AudioProcessPipeline.Fragment.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: AudioProcessPipeline.Fragment.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): AudioProcessPipeline.Fragment = _builder.build()

    /**
     * <code>int64 startUs = 1;</code>
     */
    var startUs: kotlin.Long
      @JvmName("getStartUs")
      get() = _builder.getStartUs()
      @JvmName("setStartUs")
      set(value) {
        _builder.setStartUs(value)
      }
    /**
     * <code>int64 startUs = 1;</code>
     */
    fun clearStartUs() {
      _builder.clearStartUs()
    }

    /**
     * <code>int64 endUs = 2;</code>
     */
    var endUs: kotlin.Long
      @JvmName("getEndUs")
      get() = _builder.getEndUs()
      @JvmName("setEndUs")
      set(value) {
        _builder.setEndUs(value)
      }
    /**
     * <code>int64 endUs = 2;</code>
     */
    fun clearEndUs() {
      _builder.clearEndUs()
    }

    /**
     * <code>.Transformer transformer = 3;</code>
     */
    var transformer: AudioProcessPipeline.Transformer
      @JvmName("getTransformer")
      get() = _builder.getTransformer()
      @JvmName("setTransformer")
      set(value) {
        _builder.setTransformer(value)
      }
    /**
     * <code>.Transformer transformer = 3;</code>
     */
    fun clearTransformer() {
      _builder.clearTransformer()
    }
    /**
     * <code>.Transformer transformer = 3;</code>
     * @return Whether the transformer field is set.
     */
    fun hasTransformer(): kotlin.Boolean {
      return _builder.hasTransformer()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun AudioProcessPipeline.Fragment.copy(block: FragmentKt.Dsl.() -> Unit): AudioProcessPipeline.Fragment =
  FragmentKt.Dsl._create(this.toBuilder()).apply { block() }._build()
